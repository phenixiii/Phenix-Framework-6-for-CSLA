<?xml version="1.0" encoding="utf-8"?>
<root>
  <!-- 
    Microsoft ResX Schema 
    
    Version 2.0
    
    The primary goals of this format is to allow a simple XML format 
    that is mostly human readable. The generation and parsing of the 
    various data types are done through the TypeConverter classes 
    associated with the data types.
    
    Example:
    
    ... ado.net/XML headers & schema ...
    <resheader name="resmimetype">text/microsoft-resx</resheader>
    <resheader name="version">2.0</resheader>
    <resheader name="reader">System.Resources.ResXResourceReader, System.Windows.Forms, ...</resheader>
    <resheader name="writer">System.Resources.ResXResourceWriter, System.Windows.Forms, ...</resheader>
    <data name="Name1"><value>this is my long string</value><comment>this is a comment</comment></data>
    <data name="Color1" type="System.Drawing.Color, System.Drawing">Blue</data>
    <data name="Bitmap1" mimetype="application/x-microsoft.net.object.binary.base64">
        <value>[base64 mime encoded serialized .NET Framework object]</value>
    </data>
    <data name="Icon1" type="System.Drawing.Icon, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
        <value>[base64 mime encoded string representing a byte array form of the .NET Framework object]</value>
        <comment>This is a comment</comment>
    </data>
                
    There are any number of "resheader" rows that contain simple 
    name/value pairs.
    
    Each data row contains a name, and value. The row also contains a 
    type or mimetype. Type corresponds to a .NET class that support 
    text/value conversion through the TypeConverter architecture. 
    Classes that don't support this are serialized and stored with the 
    mimetype set.
    
    The mimetype is used for serialized objects, and tells the 
    ResXResourceReader how to depersist the object. This is currently not 
    extensible. For a given mimetype the value must be set accordingly:
    
    Note - application/x-microsoft.net.object.binary.base64 is the format 
    that the ResXResourceWriter will generate, however the reader can 
    read any of the formats listed below.
    
    mimetype: application/x-microsoft.net.object.binary.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Binary.BinaryFormatter
            : and then encoded with base64 encoding.
    
    mimetype: application/x-microsoft.net.object.soap.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Soap.SoapFormatter
            : and then encoded with base64 encoding.

    mimetype: application/x-microsoft.net.object.bytearray.base64
    value   : The object must be serialized into a byte array 
            : using a System.ComponentModel.TypeConverter
            : and then encoded with base64 encoding.
    -->
  <xsd:schema id="root" xmlns="" xmlns:xsd="http://www.w3.org/2001/XMLSchema" xmlns:msdata="urn:schemas-microsoft-com:xml-msdata">
    <xsd:import namespace="http://www.w3.org/XML/1998/namespace" />
    <xsd:element name="root" msdata:IsDataSet="true">
      <xsd:complexType>
        <xsd:choice maxOccurs="unbounded">
          <xsd:element name="metadata">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" />
              </xsd:sequence>
              <xsd:attribute name="name" use="required" type="xsd:string" />
              <xsd:attribute name="type" type="xsd:string" />
              <xsd:attribute name="mimetype" type="xsd:string" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="assembly">
            <xsd:complexType>
              <xsd:attribute name="alias" type="xsd:string" />
              <xsd:attribute name="name" type="xsd:string" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="data">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
                <xsd:element name="comment" type="xsd:string" minOccurs="0" msdata:Ordinal="2" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" msdata:Ordinal="1" />
              <xsd:attribute name="type" type="xsd:string" msdata:Ordinal="3" />
              <xsd:attribute name="mimetype" type="xsd:string" msdata:Ordinal="4" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="resheader">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" />
            </xsd:complexType>
          </xsd:element>
        </xsd:choice>
      </xsd:complexType>
    </xsd:element>
  </xsd:schema>
  <resheader name="resmimetype">
    <value>text/microsoft-resx</value>
  </resheader>
  <resheader name="version">
    <value>2.0</value>
  </resheader>
  <resheader name="reader">
    <value>System.Resources.ResXResourceReader, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <resheader name="writer">
    <value>System.Resources.ResXResourceWriter, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <data name="AddtimeFriendlyName" xml:space="preserve">
    <value>添加時間</value>
  </data>
  <data name="CaptionFriendlyName" xml:space="preserve">
    <value>標簽</value>
  </data>
  <data name="CheckOccupiedException" xml:space="preserve">
    <value>記錄 {0} 存在詳細記錄: {1}</value>
  </data>
  <data name="CheckRepeatedException" xml:space="preserve">
    <value>記錄 {0} 在表中存在重複內容: {1} [{2}]</value>
  </data>
  <data name="DatabaseConnectionFailed" xml:space="preserve">
    <value>數據庫連接失敗</value>
  </data>
  <data name="DatabaseConnectionSucceed" xml:space="preserve">
    <value>數據庫連接成功</value>
  </data>
  <data name="KeyFriendlyName" xml:space="preserve">
    <value>鍵</value>
  </data>
  <data name="MethodNotImplemented" xml:space="preserve">
    <value>尚未實現</value>
  </data>
  <data name="NoService" xml:space="preserve">
    <value>當前服務失效, 請先注冊服務代理</value>
  </data>
  <data name="PleaseRegisterEnable" xml:space="preserve">
    <value>請注冊並激活{0}</value>
  </data>
  <data name="PleaseWait" xml:space="preserve">
    <value>請稍候</value>
  </data>
  <data name="ProcessLockException" xml:space="preserve">
    <value>{0} 已被 {1} 鎖定({2} -&gt; {3}: {4}), 必須由 {1} 解鎖</value>
  </data>
  <data name="ReadLevelFriendlyName" xml:space="preserve">
    <value>讀取級別</value>
  </data>
  <data name="SelectedFriendlyName" xml:space="preserve">
    <value>選擇</value>
  </data>
  <data name="SetDataSourceHint" xml:space="preserve">
    <value>{0}, 綁定用時{1}秒</value>
  </data>
  <data name="UserNumberFriendlyName" xml:space="preserve">
    <value>登錄工號</value>
  </data>
  <data name="UserVerifyException" xml:space="preserve">
    <value>非法操作-用戶未經驗證通過: {0}</value>
  </data>
  <data name="ValueFriendlyName" xml:space="preserve">
    <value>值</value>
  </data>
  <data name="PropertyFriendlyName" xml:space="preserve">
    <value>屬性</value>
  </data>
  <data name="BusinessCodeFormatException" xml:space="preserve">
    <value>{0} 業務代碼格式錯誤: {1}</value>
  </data>
  <data name="CriteriaExpressionFriendlyName" xml:space="preserve">
    <value>條件表達式</value>
  </data>
  <data name="FlagFriendlyName" xml:space="preserve">
    <value>標記</value>
  </data>
  <data name="PromptCodeFriendlyName" xml:space="preserve">
    <value>提示碼</value>
  </data>
  <data name="EnabledFriendlyName" xml:space="preserve">
    <value>可用</value>
  </data>
  <data name="IndexNumberFriendlyName" xml:space="preserve">
    <value>索引</value>
  </data>
  <data name="CannotConnectTo" xml:space="preserve">
    <value>無法連接到 {0}</value>
  </data>
  <data name="Cancel" xml:space="preserve">
    <value>取消</value>
  </data>
  <data name="Ok" xml:space="preserve">
    <value>確認</value>
  </data>
  <data name="NoSuchMethod" xml:space="preserve">
    <value>不存在指定的方法 {0}</value>
  </data>
  <data name="WorkflowInfoDoesNotExist" xml:space="preserve">
    <value>工作流信息 {0}.{1} 不存在</value>
  </data>
  <data name="PluginAssemblyNameRequired" xml:space="preserve">
    <value>{0}({1}) PluginAssemblyName 不允許爲空</value>
  </data>
  <data name="CriteriaFriendlyName" xml:space="preserve">
    <value>條件</value>
  </data>
  <data name="CheckDirtyException" xml:space="preserve">
    <value>保存記錄 {0} 前已被其他用戶更新過</value>
  </data>
  <data name="DeleteException" xml:space="preserve">
    <value>刪除記錄 {0} 失敗</value>
  </data>
  <data name="InsertException" xml:space="preserve">
    <value>新增記錄 {0} 失敗</value>
  </data>
  <data name="UpdateException" xml:space="preserve">
    <value>更新記錄 {0} 失敗</value>
  </data>
  <data name="UserLockedException" xml:space="preserve">
    <value>{0}用戶已被禁止登錄, 請聯系系統管理員解鎖.</value>
  </data>
  <data name="UserNotFoundException" xml:space="preserve">
    <value>{0}用戶未經驗證通過</value>
  </data>
  <data name="ValidationException" xml:space="preserve">
    <value>對象含無效值: {0}</value>
  </data>
  <data name="MaxLengthRule" xml:space="preserve">
    <value>{0}的值'{1}'不能多於{2}個字</value>
  </data>
  <data name="MinLengthRule" xml:space="preserve">
    <value>{0}的值'{1}'不能少於{2}個字</value>
  </data>
  <data name="RequiredRule" xml:space="preserve">
    <value>{0} 不可空白</value>
  </data>
  <data name="UserStillTimeoutException" xml:space="preserve">
    <value>最近壹次在{0}操作, 靜止超過{1}分鐘</value>
  </data>
  <data name="UserTimestampRepeatedException" xml:space="preserve">
    <value>時間戳{0}有重復!</value>
  </data>
  <data name="UserMultipleAddressLoginException" xml:space="preserve">
    <value>不允許多個地址登錄</value>
  </data>
  <data name="UserSignatureException" xml:space="preserve">
    <value>用戶未經驗證通過</value>
  </data>
  <data name="PasswordComplexityReminder" xml:space="preserve">
    <value>口令過于簡單(長度需大于{0}位且含數字和大小寫字母或特殊字符的類別達到{1}種)</value>
  </data>
</root>